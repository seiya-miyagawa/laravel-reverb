services:
#  不要
#  laravel1:
#    build:
#      context: .
#      dockerfile: docker/php/Dockerfile
#    container_name: laravel1
#    restart: unless-stopped
#    tty: true
#    environment:
#      SERVICE_NAME: laravel
#      SERVICE_TAGS: dev
#    working_dir: /var/www/laravel-chat
#    volumes:
#      - ./laravel-chat_1:/var/www/laravel-chat
#      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
#    env_file:
#      - .env
#    ports:
#      - "${LARAVEL1_PORT}:9001"

  laravel-reverb:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-reverb
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel
      SERVICE_TAGS: dev
    working_dir: /var/www/laravel-chat
    volumes:
      - ./laravel-reverb:/var/www/laravel-chat
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    env_file:
      - .env
    ports:
      - "9008:6999"
      - "9099:8000"

  laravel-reverb2:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-reverb2
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel
      SERVICE_TAGS: dev
    working_dir: /var/www/laravel-chat
    volumes:
      - ./laravel-reverb2:/var/www/laravel-chat
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    env_file:
      - .env
    ports:
      - "9007:6998"
      - "9098:8001"

  db:
    container_name: db
    image: mysql:8.0
    platform: linux/x86_64
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      TZ: 'Asia/Tokyo'
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf

  redis:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    container_name: redis
    restart: unless-stopped
    ports:
      - "${DOCKER_REDIS_PORT}:6379"
    env_file:
      - .env

  node:
    image: node:20.3.1-buster
    container_name: node
    tty: true
    working_dir: /var/www
    restart: unless-stopped
    ports:
      - "${NODE_PORT}:8080"
    volumes:
      - ./frontend/:/var/www
    environment:
      PORT: 8080
      HOST: 0.0.0.0
    env_file:
      - .env

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - "9100:9100"  # API用ポート
      - "9101:9101"  # WebSocket用ポート
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - .env

networks:
  default:
    name: my_reverb_network